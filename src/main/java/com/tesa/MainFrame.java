/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tesa;

import java.io.BufferedInputStream;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;
import org.apache.commons.io.IOUtils;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.ImageObserver;
import java.awt.image.ImageProducer;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileSystemView;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.entity.mime.content.StringBody;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

/**
 *
 * @author pc0203
 */
public class MainFrame extends javax.swing.JFrame {
    public HashMap<String,String> data;
    public String code;
    public String token;
    public String urlPostData;
    public String urlDownload;
    public String fileName;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        textData = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        textCode = new javax.swing.JTextField();
        btnSendData = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        textToken = new javax.swing.JTextField();
        btnCreateCode = new javax.swing.JButton();
        textReport = new javax.swing.JLabel();
        btnGetData = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        fileChooser = new javax.swing.JButton();
        textFilePath = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnDownloadFile = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textData.setColumns(20);
        textData.setRows(5);
        textData.setBorder(javax.swing.BorderFactory.createTitledBorder("Text"));
        jScrollPane2.setViewportView(textData);
        textData.getAccessibleContext().setAccessibleName("");

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 340, -1));

        jLabel1.setText("Code: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, 20));
        jPanel1.add(textCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 40, -1));

        btnSendData.setText("Send data");
        btnSendData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSendDataMouseClicked(evt);
            }
        });
        btnSendData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendDataActionPerformed(evt);
            }
        });
        jPanel1.add(btnSendData, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 30, 100, 40));

        jLabel3.setText("Token:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 40, 20));

        textToken.setEnabled(false);
        jPanel1.add(textToken, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 200, 20));

        btnCreateCode.setText("Create code");
        btnCreateCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCreateCodeMouseClicked(evt);
            }
        });
        btnCreateCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCodeActionPerformed(evt);
            }
        });
        jPanel1.add(btnCreateCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 100, 40));

        textReport.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textReport.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        textReport.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jPanel1.add(textReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 330, 30));

        btnGetData.setText("Get data");
        btnGetData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGetDataMouseClicked(evt);
            }
        });
        btnGetData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDataActionPerformed(evt);
            }
        });
        jPanel1.add(btnGetData, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 80, 100, 40));

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 100, 40));

        fileChooser.setText("Choose file");
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });
        jPanel1.add(fileChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 100, 40));
        jPanel1.add(textFilePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 290, -1));

        jLabel4.setText("File path:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        btnDownloadFile.setText("Download file");
        btnDownloadFile.setEnabled(false);
        btnDownloadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadFileActionPerformed(evt);
            }
        });
        jPanel1.add(btnDownloadFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 100, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendDataActionPerformed
        // TODO add your handling code here:
        String urlPost="http://tesa.me:8181/data?u=140896&o="+token+"&t=0";
        postData(urlPost, textData.getText());
        textReport.setForeground(Color.BLUE);
        textReport.setText("Send data successful!");
        if (textCode.getText().trim().length()==0||null==textCode.getText()) {
            textReport.setForeground(Color.RED);
            textReport.setText("Send data error!");
        }
        uploadFile(textToken.getText());
       
    }//GEN-LAST:event_btnSendDataActionPerformed

    private void btnSendDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSendDataMouseClicked
        // TODO add your handling code here:
//        String urlPost="http://tesa.me:8181/data?u=140896&o="+token+"&t=0";
//        postData(urlPost, textData.getText());
//        textReport.setForeground(Color.BLUE);
//        textReport.setText("Send data successful!");
//        if (textCode.getText().trim().length()==0||null==textCode.getText()) {
//            textReport.setForeground(Color.RED);
//            textReport.setText("Send data error!");
//        }
//       
    }//GEN-LAST:event_btnSendDataMouseClicked

    private void btnCreateCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCreateCodeMouseClicked
        // TODO add your handling code here:
//        data=mapData();
//        code=data.get("code");
//        token=data.get("token");
//        textCode.setText(code);
//        textToken.setText(token);
//        textData.setText("");
//        textReport.setText("");
    }//GEN-LAST:event_btnCreateCodeMouseClicked

    private void btnGetDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGetDataMouseClicked
        // TODO add your handling code here:
//        String token=getTokenByCode(textCode.getText());
//        if (token.trim().length()!=0) {
//            textData.setText(recevieData(token));
//        }
    }//GEN-LAST:event_btnGetDataMouseClicked

    private void btnCreateCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCodeActionPerformed
        // TODO add your handling code here:
        data=mapData();
        code=data.get("code");
        token=data.get("token");
        textCode.setText(code);
        textToken.setText(token);
        textData.setText("");
        textReport.setText("");
        btnDownloadFile.setEnabled(false);
    }//GEN-LAST:event_btnCreateCodeActionPerformed

    private void btnGetDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDataActionPerformed
        // TODO add your handling code here:
        token=getTokenByCode(textCode.getText());
        Map<String,String> map=recevieData(token);
             
        if (token.trim().length()!=0) {
            textData.setText(map.get("text"));
        }
        if (null!=map.get("fileName")) {
            fileName=map.get("fileName");
            btnDownloadFile.setEnabled(true);
        }else
            btnDownloadFile.setEnabled(false);
    }//GEN-LAST:event_btnGetDataActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        textCode.setText("");
        textData.setText("");        
        textReport.setText("");
        textToken.setText("");
        textFilePath.setText("");
        btnDownloadFile.setEnabled(false);
    }//GEN-LAST:event_btnClearActionPerformed
 
    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
		int returnValue = jfc.showOpenDialog(null);
		// int returnValue = jfc.showSaveDialog(null);

		if (returnValue == JFileChooser.APPROVE_OPTION) {
			File selectedFile = jfc.getSelectedFile();
                        textFilePath.setText(selectedFile.getAbsolutePath());
		}
    }//GEN-LAST:event_fileChooserActionPerformed

    private void btnDownloadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadFileActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
		jfc.setDialogTitle("Choose a directory to save your file: ");
		jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

		int returnValue = jfc.showSaveDialog(null);
		if (returnValue == JFileChooser.APPROVE_OPTION) {
			if (jfc.getSelectedFile().isDirectory()) {
				System.out.println("You selected the directory: " + jfc.getSelectedFile());
			}
		}
        String urlDownload="http://tesa.me:8181/"+token+"/"+fileName;
        downloadFile(urlDownload, jfc.getSelectedFile().toString()+"\\"+fileName);

    }//GEN-LAST:event_btnDownloadFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            
            /* Create and display the form */
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    MainFrame mainFrame=new MainFrame();
                    mainFrame.setLocationRelativeTo(null);
                    mainFrame.setVisible(true);
                    mainFrame.setName("Tesa");
                    mainFrame.setTitle("Tesa desktop");
                    ImageIcon img = new ImageIcon("C:\\Users\\pc0203\\Documents\\NetBeansProjects\\TesaDesktop\\src\\main\\java\\com\\icon\\tesa.png");
                    mainFrame.setIconImage(img.getImage());
                    
//                    new MainFrame().setVisible(true);
                }
            });
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }
     public void uploadFile(String token) {
        CloseableHttpClient httpclient = HttpClients.createDefault();
        try {
            HttpPost httppost = new HttpPost("http://tesa.me:8181/data?u=140896&o="+token+"&t=1");


            StringBody dataType=new StringBody("file", ContentType.TEXT_PLAIN);

            org.apache.http.HttpEntity reqEntity = MultipartEntityBuilder.create()
//                    .addPart("data-type",dataType)
                    .addBinaryBody("file",new File(textFilePath.getText()))
                    .build();
            httppost.setEntity(reqEntity);
            System.out.println("executing request " + httppost.getRequestLine());
            CloseableHttpResponse response = httpclient.execute(httppost);

                System.out.println("----------------------------------------");
                System.out.println(response.getStatusLine());
                org.apache.http.HttpEntity resEntity = response.getEntity();
                if (resEntity != null) {
                    System.out.println("Response content length: " + resEntity.getContentLength());
                }
                EntityUtils.consume(resEntity);

        }catch (Exception e){
            e.printStackTrace();
        }finally {
            try {
                httpclient.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
 private  void downloadFile(String urlStr, String file) {
        try {
            System.setProperty("http.agent", "Chrome");
            URL url = new URL(urlStr);
            BufferedInputStream bis = new BufferedInputStream(url.openStream());
            FileOutputStream fis = new FileOutputStream(file);
            byte[] buffer = new byte[1024];
            int count=0;
            while((count = bis.read(buffer,0,1024)) != -1)
            {
                fis.write(buffer, 0, count);
            }
            fis.close();
            bis.close();
        }catch (Exception e){
            e.printStackTrace();
        }

    }
      public Map<String,String> recevieData(String token){
        Map<String,String> map=new HashMap<>();
        String data;
        try {
            HttpURLConnection connection = initHttpURLConnection("http://tesa.me:8181/data?u=1&o=" + token, "GET", "text/html;charset=utf-8");
            InputStream in = new BufferedInputStream(connection.getInputStream());
            data = IOUtils.toString(in, "UTF-8");
            map = new ObjectMapper().readValue(data, HashMap.class);
        } catch (IOException e) {
            return map;
        }
        return  map;
     }
      public String getTokenByCode(String code){
           String token="";
        try {
            HttpURLConnection connection = initHttpURLConnection("http://tesa.me:8181/connect?u=1&c=" + code, "GET", "text/html;charset=utf-8");
            InputStream in = new BufferedInputStream(connection.getInputStream());
            token = IOUtils.toString(in, "UTF-8").trim();
            if (connection.getResponseCode()==200) {
                textReport.setForeground(Color.BLUE);
                textReport.setText("Get data successfull!");
            }
            System.out.println(token);
       
        } catch (IOException e) {
            textReport.setForeground(Color.red);
            textReport.setText("Can not get data!");
            token="";
        }
        
        return token;
      }
    public static HashMap<String,String> mapData(){
        HashMap<String,String> map=null;
        try {
            HttpURLConnection connection= initHttpURLConnection("http://tesa.me:8181/getcode?u=140896","GET","text/html;charset=utf-8");
            InputStream in = new BufferedInputStream(connection.getInputStream());
            String data  = IOUtils.toString(in, "UTF-8");
            System.out.println(data);
            map = new ObjectMapper().readValue(data, HashMap.class);

        } catch (Exception e) {
            e.printStackTrace();
        }
        return  map;
    }
    public String  getFileNameByCode(String token) {
        String fileName="";
        try {
            HttpURLConnection conn= initHttpURLConnection("http://tesa.me:8181/data?u=140896&o="+token+"&t=0","POST","\"application/json; charset=UTF-8\"");
            InputStream in = new BufferedInputStream(conn.getInputStream());
            String result = IOUtils.toString(in, "UTF-8");
            Map<String,String>map= new ObjectMapper().readValue(result, HashMap.class);
            fileName=map.get("fileName");
            in.close();
            conn.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
            textReport.setForeground(Color.RED);
            textReport.setText("Send data error!");
        }
        return fileName;
    }
  public void postData(String urlService, String data) {
        try {
            HttpURLConnection conn= initHttpURLConnection(urlService,"POST","\"application/json; charset=UTF-8\"");
            OutputStream os = conn.getOutputStream();
            os.write(data.getBytes("UTF-8"));
            os.close();
            InputStream in = new BufferedInputStream(conn.getInputStream());
            String result = IOUtils.toString(in, "UTF-8");
            in.close();
            conn.disconnect();
        } catch (IOException e) {
            e.printStackTrace();
            textReport.setForeground(Color.RED);
            textReport.setText("Send data error!");
        }
    }

     public static HttpURLConnection initHttpURLConnection(String urlService,String contentType,String requestMethod){
        URL url = null;
        HttpURLConnection conn=null;
        try {
            url = new URL(urlService);
            conn = (HttpURLConnection) url.openConnection();
            conn.setConnectTimeout(1000);
            conn.setRequestProperty("Content-Type", requestMethod);
            conn.setDoOutput(true);
            conn.setDoInput(true);
            conn.setRequestMethod(contentType);

        } catch (Exception e) {
            e.printStackTrace();
        }
        return conn;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCreateCode;
    private javax.swing.JButton btnDownloadFile;
    private javax.swing.JButton btnGetData;
    private javax.swing.JButton btnSendData;
    private javax.swing.JButton fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField textCode;
    private javax.swing.JTextArea textData;
    private javax.swing.JTextField textFilePath;
    private javax.swing.JLabel textReport;
    private javax.swing.JTextField textToken;
    // End of variables declaration//GEN-END:variables
}
